---
import Icon from '@/components/icon'
import { Button } from '@/components/ui/button'
import { useNavTranslation } from '@/locales/i18n'
import { isDEV } from '@/utils/constant'
import { cls } from 'cls-variant'

type Title = 'usage' | 'playground' | 'download'

interface Props {
  isMain?: boolean
  /**
   * Must setup if `isMain` is false
   */
  title?: Title
}

const props = Astro.props
const locale = Astro.currentLocale
const baseUrl = isDEV ? `/${locale}` : `${Astro.site}/${locale}`
const playgroundLink = `${baseUrl}/playground`
const usageLink = `${baseUrl}/usage`
const downloadLink = `${baseUrl}/download`

const {
  credits,
  get,
  features,
  preview,
  why,
  titles,
} = await useNavTranslation(Astro.currentLocale)

const navigatorText = [
  ['#why', why],
  ['#features', features],
  ['#preview', preview],
  ['#credits', credits],
] as const

function is(url: Title) {
  return Astro.url.pathname === `/${locale}/${url}`
}
---

<nav
  class="fixed z-999 w-full flex items-center bg-background/50 p-2 backdrop-blur-lg"
>
  <a href={baseUrl} title="Home Page">
    <img
      src="/favicon.svg"
      alt="Maple Mono Icon"
      class="h-6 cursor-pointer hover:scale-110"
    />
  </a>
  <div class="ml-2 w-full flex justify-between">
    <div class="flex select-none items-center">
      {
        props.isMain
          ? (
              <div class="hidden whitespace-nowrap sm:block">
                {navigatorText.map(([anchor, text]) => (
                  <Button
                    size="md"
                    variant="link"
                    as="a"
                    href={anchor}
                    aria-label={text}
                  >
                    {text}
                  </Button>
                ))}
              </div>
            )
          : (
              <a href={baseUrl} class="ml--2 hidden pl-4 text-5.5 c-accent font-bold xs:block">
                Maple Mono
              </a>
            )
      }
    </div>
    <div class="flex items-center">
      <Button
        size="md"
        variant="link"
        class={cls(is('playground') && 'c-secondary')}
        as="a"
        href={playgroundLink}
      >
        <Icon name="lucide:bug-play" class="sm:mr-1" />
        <span class="hidden sm:block">
          {titles.playground}
        </span>
      </Button>
      <Button
        size="md"
        variant="link"
        as="a"
        class={cls(is('usage') && 'c-secondary')}
        href={usageLink}
      >
        <Icon name="lucide:book" class="sm:mr-1" />
        <span class="hidden sm:block">
          {titles.usage}
        </span>
      </Button>
      <Button
        size="md"
        as="a"
        class="mr-2"
        variant="link"
        href="https://github.com/subframe7536/maple-font"
        target="_blank"
        title="GitHub"
        aria-label="GitHub"
      >
        <Icon name="lucide:github" class="sm:mr-1" />
        <span class="hidden sm:block"> GitHub </span>
      </Button>
      <Button
        size="md"
        as="a"
        class={cls(is('download') && 'bg-secondary')}
        href={downloadLink}
      >
        {get}
      </Button>
    </div>
  </div>
</nav>

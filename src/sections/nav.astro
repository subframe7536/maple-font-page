---
import Icon from '@/components/icon'
import { Button } from '@/components/ui/button'
import { useNavTranslation } from '@/locales/i18n'
import { isDEV } from '@/utils/constant'

interface Props {
  isMain?: boolean
  /**
   * Must setup if `isMain` is false
   */
  title?: 'usage' | 'playground' | 'download'
}

const props = Astro.props
const locale = Astro.currentLocale
const baseUrl = isDEV ? `/${locale}` : `${Astro.site}/${locale}`
const playgroundLink = `${baseUrl}/playground`
const usageLink = `${baseUrl}/usage`
const downloadLink = `${baseUrl}/download`

const {
  credits,
  download,
  features,
  preview,
  why,
  titles,
} = await useNavTranslation(Astro.currentLocale)

const navigatorText = [
  ['#why', why],
  ['#features', features],
  ['#preview', preview],
  ['#credits', credits],
] as const

const pageContent = {
  target: {
    text: props.title === 'usage' ? titles.playground : titles.usage,
    link: props.title === 'usage' ? playgroundLink : usageLink,
  },
  download,
}

---

<nav
  class="fixed z-999 w-full flex items-center bg-background/50 p-2 backdrop-blur-lg"
>
  <img
    src="/favicon.svg"
    alt="Maple Mono Icon"
    class="h-6 cursor-pointer hover:scale-110"
    onclick={`window.location='${baseUrl}'`}
  />
  <div class="ml-2 w-full flex justify-end sm:justify-between">
    <div
      class="hidden select-none items-center sm:flex"
    >
      {props.isMain
        ? navigatorText.map(([anchor, text]) => (
            <Button
              size="md"
              variant="link"
              as="a"
              href={anchor}
              aria-label={text}
            >
              {text}
            </Button>
          ))
        : <div class="ml-2 c-accent font-bold">{titles[props.title!] || ''}</div>}
    </div>
    <div class="flex items-center gap-4">
      <Button
        size="md"
        as="a"
        class="m-r--2"
        variant="link"
        href="https://github.com/subframe7536/maple-font"
        target="_blank"
        title="GitHub"
        aria-label="GitHub"
      >
        <Icon name="lucide:github" class="mr-2 size-4" />
        GitHub
      </Button>
      <Button size="md" variant="link" as="a" href={pageContent.target.link}>
        {pageContent.target.text}
      </Button>
      <Button size="md" as="a" href={downloadLink}>
        {pageContent.download}
      </Button>
    </div>
  </div>
</nav>
